-----------------------------------
  TODO list for MastersDB project
-----------------------------------
                      Copyright (C) 2010, Dinko Hasanbasic (dinkoh@bih.net.ba)

General
-------
  * add support for character sets (at B-Tree level):
    - ISO-8859-(1-16), 1 byte per character
    - UTF-8, 1-4 bytes per character
    - UTF-16, 2 bytes per character (BMP), 4 byte per surrogate pair
    
  * implement a basic interface (structure) to describe a column
  
  * design a file format for storing B-trees:
    # 512 Bytes Header with:
      - MastersDB magic number, format identification
      - Pointer to first B-tree descriptor block
      - Pointer to first free list block
    # 1-4 KB-blocks of following types:
      - 1 KB: B-tree descriptor storage
      - 1 KB: Free list storage
      - 4 KB: B-tree node storage
      - 4 KB: B(plus)-tree key storage
  
  * Store the string length in the column that stores a string to avoid
    unnecessary counting of characters
  

Optimizations
-------------
  * General
    - Assume preallocated BtreeNode structures in ReadNode/WriteNode
      implementations.
            
  * btree.c:
    - Use binary search during insert/delete, instead of sequential.
    - Write iterative versions of insert/delete.

Ideas
-----
  * btree.h, btree.c
    - Instead of using unsigned long as child pointer to a node, use void*,
      store the child pointer size in the Btree structure and let ReadNode/
      WriteNode take care of what to do with that pointer. With such
      implementation, in-memory and in-file B-trees can be easier implemented.
